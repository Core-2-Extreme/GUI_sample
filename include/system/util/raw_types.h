#if !defined(DEF_RAW_TYPES_H)
#define DEF_RAW_TYPES_H
#include <stdbool.h>
#include <stdint.h>

//These definitions are based on (stolen from) library\ffmpeg\include\libavutil\pixfmt.h see it for more information.
typedef enum
{
	PIXEL_FORMAT_INVALID			= -1,
	//YUV*.
	PIXEL_FORMAT_YUV410P			= 0,
	PIXEL_FORMAT_YUV411P			= 1,
	PIXEL_FORMAT_YUV420P			= 2,
	PIXEL_FORMAT_YUV420P9BE			= 3,
	PIXEL_FORMAT_YUV420P9LE			= 4,
	PIXEL_FORMAT_YUV420P10BE		= 5,
	PIXEL_FORMAT_YUV420P10LE		= 6,
	PIXEL_FORMAT_YUV420P12BE		= 7,
	PIXEL_FORMAT_YUV420P12LE		= 8,
	PIXEL_FORMAT_YUV420P14BE		= 9,
	PIXEL_FORMAT_YUV420P14LE		= 10,
	PIXEL_FORMAT_YUV420P16BE		= 11,
	PIXEL_FORMAT_YUV420P16LE		= 12,
	PIXEL_FORMAT_YUV422P			= 13,
	PIXEL_FORMAT_YUV422P9BE			= 14,
	PIXEL_FORMAT_YUV422P9LE			= 15,
	PIXEL_FORMAT_YUV422P10BE		= 16,
	PIXEL_FORMAT_YUV422P10LE		= 17,
	PIXEL_FORMAT_YUV422P12BE		= 18,
	PIXEL_FORMAT_YUV422P12LE		= 19,
	PIXEL_FORMAT_YUV422P14BE		= 20,
	PIXEL_FORMAT_YUV422P14LE		= 21,
	PIXEL_FORMAT_YUV422P16BE		= 22,
	PIXEL_FORMAT_YUV422P16LE		= 23,
	PIXEL_FORMAT_YUV440P			= 24,
	PIXEL_FORMAT_YUV440P10BE		= 25,
	PIXEL_FORMAT_YUV440P10LE		= 26,
	PIXEL_FORMAT_YUV440P12BE		= 27,
	PIXEL_FORMAT_YUV440P12LE		= 28,
	PIXEL_FORMAT_YUV444P			= 29,
	PIXEL_FORMAT_YUV444P9BE			= 30,
	PIXEL_FORMAT_YUV444P9LE			= 31,
	PIXEL_FORMAT_YUV444P10BE		= 32,
	PIXEL_FORMAT_YUV444P10LE		= 33,
	PIXEL_FORMAT_YUV444P12BE		= 34,
	PIXEL_FORMAT_YUV444P12LE		= 35,
	PIXEL_FORMAT_YUV444P14BE		= 36,
	PIXEL_FORMAT_YUV444P14LE		= 37,
	PIXEL_FORMAT_YUV444P16BE		= 38,
	PIXEL_FORMAT_YUV444P16LE		= 39,
	//YUVJ*.
	PIXEL_FORMAT_YUVJ411P			= 40,
	PIXEL_FORMAT_YUVJ420P			= 41,
	PIXEL_FORMAT_YUVJ422P			= 42,
	PIXEL_FORMAT_YUVJ440P			= 43,
	PIXEL_FORMAT_YUVJ444P			= 44,
	//YUVA*.
	PIXEL_FORMAT_YUVA420P			= 45,
	PIXEL_FORMAT_YUVA420P9BE		= 46,
	PIXEL_FORMAT_YUVA420P9LE		= 47,
	PIXEL_FORMAT_YUVA420P10BE		= 48,
	PIXEL_FORMAT_YUVA420P10LE		= 49,
	PIXEL_FORMAT_YUVA420P16BE		= 50,
	PIXEL_FORMAT_YUVA420P16LE		= 51,
	PIXEL_FORMAT_YUVA422P			= 52,
	PIXEL_FORMAT_YUVA422P9BE		= 53,
	PIXEL_FORMAT_YUVA422P9LE		= 54,
	PIXEL_FORMAT_YUVA422P10BE		= 55,
	PIXEL_FORMAT_YUVA422P10LE		= 56,
	PIXEL_FORMAT_YUVA422P16BE		= 57,
	PIXEL_FORMAT_YUVA422P16LE		= 58,
	PIXEL_FORMAT_YUVA444P			= 59,
	PIXEL_FORMAT_YUVA444P9BE		= 60,
	PIXEL_FORMAT_YUVA444P9LE		= 61,
	PIXEL_FORMAT_YUVA444P10BE		= 62,
	PIXEL_FORMAT_YUVA444P10LE		= 63,
	PIXEL_FORMAT_YUVA444P16BE		= 64,
	PIXEL_FORMAT_YUVA444P16LE		= 65,
	//UYVY*.
	PIXEL_FORMAT_UYVY422			= 66,
	//YUYV*.
	PIXEL_FORMAT_YUYV422			= 67,
	//YVYU*.
	PIXEL_FORMAT_YVYU422			= 68,
	//UYYVYY*.
	PIXEL_FORMAT_UYYVYY411			 = 69,
	//RGB* (exclude RGBA).
	PIXEL_FORMAT_RGB121				= 70,
	PIXEL_FORMAT_RGB121_BYTE		= 71,
	PIXEL_FORMAT_RGB332				= 72,
	PIXEL_FORMAT_RGB444BE			= 73,
	PIXEL_FORMAT_RGB444LE			= 74,
	PIXEL_FORMAT_RGB555BE			= 75,
	PIXEL_FORMAT_RGB555LE			= 76,
	PIXEL_FORMAT_RGB565BE			= 77,
	PIXEL_FORMAT_RGB565LE			= 78,
	PIXEL_FORMAT_RGB888				= 79,
	PIXEL_FORMAT_RGB161616BE		= 80,
	PIXEL_FORMAT_RGB161616LE		= 81,
	//BGR* (exclude BGRA).
	PIXEL_FORMAT_BGR121				= 82,
	PIXEL_FORMAT_BGR121_BYTE		= 83,
	PIXEL_FORMAT_BGR332				= 84,
	PIXEL_FORMAT_BGR444BE			= 85,
	PIXEL_FORMAT_BGR444LE			= 86,
	PIXEL_FORMAT_BGR555BE			= 87,
	PIXEL_FORMAT_BGR555LE			= 88,
	PIXEL_FORMAT_BGR565BE			= 89,
	PIXEL_FORMAT_BGR565LE			= 90,
	PIXEL_FORMAT_BGR888				= 91,
	PIXEL_FORMAT_BGR161616BE		= 92,
	PIXEL_FORMAT_BGR161616LE		= 93,
	//GBR* (exclude GRBA).
	PIXEL_FORMAT_GBR888P			= 94,
	PIXEL_FORMAT_GBR999PBE			= 95,
	PIXEL_FORMAT_GBR999PLE			= 96,
	PIXEL_FORMAT_GBR101010PBE		= 97,
	PIXEL_FORMAT_GBR101010PLE		= 98,
	PIXEL_FORMAT_GBR121212PBE		= 99,
	PIXEL_FORMAT_GBR121212PLE		= 100,
	PIXEL_FORMAT_GBR141414PBE		= 101,
	PIXEL_FORMAT_GBR141414PLE		= 102,
	PIXEL_FORMAT_GBR161616PBE		= 103,
	PIXEL_FORMAT_GBR161616PLE		= 104,
	//ARGB*.
	PIXEL_FORMAT_ARGB8888			= 105,
	//ABGR*.
	PIXEL_FORMAT_ABGR8888			= 106,
	//RGBA*.
	PIXEL_FORMAT_RGBA8888			= 107,
	PIXEL_FORMAT_RGBA16161616BE		= 108,
	PIXEL_FORMAT_RGBA16161616LE		= 109,
	//BGRA*.
	PIXEL_FORMAT_BGRA8888			= 110,
	PIXEL_FORMAT_BGRA16161616BE		= 111,
	PIXEL_FORMAT_BGRA16161616LE		= 112,
	//GBRA*.
	PIXEL_FORMAT_GBRA8888P			= 113,
	PIXEL_FORMAT_GBRA10101010PBE	= 114,
	PIXEL_FORMAT_GBRA10101010PLE	= 115,
	PIXEL_FORMAT_GBRA12121212PBE	= 116,
	PIXEL_FORMAT_GBRA12121212PLE	= 117,
	PIXEL_FORMAT_GBRA16161616PBE	= 118,
	PIXEL_FORMAT_GBRA16161616PLE	= 119,
	//GRAY*.
	PIXEL_FORMAT_GRAY8				= 120,
	PIXEL_FORMAT_GRAY10BE			= 121,
	PIXEL_FORMAT_GRAY10LE			= 122,
	PIXEL_FORMAT_GRAY12BE			= 123,
	PIXEL_FORMAT_GRAY12LE			= 124,
	PIXEL_FORMAT_GRAY16BE			= 125,
	PIXEL_FORMAT_GRAY16LE			= 126,
	//GRAYALPHA*.
	PIXEL_FORMAT_GRAYALPHA88		= 127,
	PIXEL_FORMAT_GRAYALPHA1616BE	= 128,
	PIXEL_FORMAT_GRAYALPHA1616LE	= 129,

	PIXEL_FORMAT_MAX,
} Pixel_format;

//These definitions are based on (stolen from) library\ffmpeg\include\libavutil\smaplefmt.h see it for more information.
typedef enum
{
	SAMPLE_FORMAT_INVALID	= -1,
	//Integer.
	SAMPLE_FORMAT_U8		= 0,
	SAMPLE_FORMAT_U8P		= 1,
	SAMPLE_FORMAT_S16		= 2,
	SAMPLE_FORMAT_S16P		= 3,
	SAMPLE_FORMAT_S32		= 4,
	SAMPLE_FORMAT_S32P		= 5,
	SAMPLE_FORMAT_S64		= 6,
	SAMPLE_FORMAT_S64P		= 7,
	//Float.
	SAMPLE_FORMAT_FLOAT32	= 8,
	SAMPLE_FORMAT_FLOAT32P	= 9,
	//Double.
	SAMPLE_FORMAT_DOUBLE64	= 10,
	SAMPLE_FORMAT_DOUBLE64P	= 11,

	SAMPLE_FORMAT_MAX,
} Sample_format;

#endif //!defined(DEF_RAW_TYPES_H)
